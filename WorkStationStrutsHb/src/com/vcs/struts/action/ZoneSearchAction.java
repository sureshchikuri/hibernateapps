/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.vcs.struts.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.vcs.service.ServiceFactory;
import com.vcs.service.ZoneService;
import com.vcs.struts.constants.WSContants;
import com.vcs.struts.form.ZoneForm;

public class ZoneSearchAction extends Action {

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ZoneForm zoneForm = (ZoneForm) form;
		ZoneService zoneService=ServiceFactory.getZoneService();
		System.out.println("zoneId:" + zoneForm.getZoneId());

		List zoneList = new ArrayList();

		String status = "";
		String id = zoneForm.getZoneId();
		String fId=zoneForm.getFloorId();
		int zoneId = 0;
		int floorId=0;
		int noOfRecords = 0;
		int pageNum = 1;
		int recordsPerPage = WSContants.RECORDS_PER_PAGE;

		if (id != null && !"".equals(id)) {
			zoneId = Integer.parseInt(id);
		}
		if (id != null && !"".equals(fId)) {
			floorId = Integer.parseInt(fId);
		}

		if (request.getParameter("page") != null) {
			pageNum = Integer.parseInt(request.getParameter("page"));
		}

		int startRow = (recordsPerPage * pageNum - (recordsPerPage)) + 1;
		int endRow = (recordsPerPage * pageNum);


		try {
			zoneList = zoneService.search(floorId, zoneId, startRow, endRow);
			noOfRecords = zoneService.getCount(zoneId);
			status="Records are not fount given criteria";
		} catch (Exception e) {
			e.printStackTrace();
		}

		int noOfPages = (int) Math.ceil(noOfRecords * 1.0 / recordsPerPage);

		HttpSession hsession = request.getSession();

		if (zoneList.size() > 0) {
			hsession.setAttribute("zoneList", zoneList);
			hsession.setAttribute("noOfPages", noOfPages);
			hsession.setAttribute("currentPage", pageNum);
			hsession.setAttribute("noOfRecords", noOfRecords);

		} else {
			hsession.setAttribute("status", status);
		}
		return mapping.findForward("success");
	}
}